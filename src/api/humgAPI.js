import puppeteer from 'puppeteer';

class Humg {
  constructor() {}
  getFullDate() {
    const month = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];
    const d = new Date();
    const day = d.getDate();
    const year = d.getFullYear();
    return `${day}/${month[d.getMonth()]}/${year}`;
  }
  getTime(tiet) {
    const time = {
      1: ['6 gi·ªù 45 ph√∫t', '7 gi·ªù 35 ph√∫t'],
      2: ['7 gi·ªù 45 ph√∫t', '8 gi·ªù 35 ph√∫t'],
      3: ['8 gi·ªù 45 ph√∫t', '9 gi·ªù 35 ph√∫t'],
      4: ['9 gi·ªù 45 ph√∫t', '10 gi·ªù 35 ph√∫t'],
      5: ['10 gi·ªù 45 ph√∫t', '11 gi·ªù 35 ph√∫t'],
      6: ['12 gi·ªù 30 ph√∫t', '13 gi·ªù 20 ph√∫t'],
      7: ['13 gi·ªù 30 ph√∫t', '14 gi·ªù 20 ph√∫t'],
      8: ['14 gi·ªù 30 ph√∫t', '15 gi·ªù 20 ph√∫t'],
      9: ['15 gi·ªù 30 ph√∫t', '16 gi·ªù 20 ph√∫t'],
      10: ['16 gi·ªù 30 ph√∫t', '17 gi·ªù 20 ph√∫t'],
      11: ['17 gi·ªù 30 ph√∫t', '18 gi·ªù 20 ph√∫t'],
      12: ['18 gi·ªù 30 ph√∫t', '19 gi·ªù 20 ph√∫t'],
      13: ['19 gi·ªù 30 ph√∫t', '20 gi·ªù 20 ph√∫t'],
    };

    const allTime = {
      batDau: time[tiet][0],
      ketThuc: time[tiet][1],
    };
    return allTime;
  }
  getDay() {
    const weekDay = [
      'Ch·ªß nh·∫≠t',
      'Th·ª© hai',
      'Th·ª© ba',
      'Th·ª© t∆∞',
      'Th·ª© nƒÉm',
      'Th·ª© s√°u',
      'Th·ª© b·∫£y',
    ];
    const d = new Date();
    return weekDay[d.getDay()];
  }
  async getSchedule(msv, name, id) {
    const browser = await puppeteer.launch({
      args: ['--no-sandbox', '--disable-setuid-sandbox'],
    });
    const page = await browser.newPage();
    await page.goto(
      `https://daotao.humg.edu.vn/default.aspx?page=thoikhoabieu&sta=0&id=${msv}`
    );

    const data = await page.evaluate(() => {
      let td = document.querySelectorAll('td[onmouseover]');
      td = [...td];
      let result = td.map((i) => i.getAttribute('onmouseover'));
      return result;
    });

    const rg = /[^']+/g;
    const tkb = [];
    if (data.length !== 0) {
      for (let i of data) {
        let result = i.match(rg);
        let temp = [];
        for (let i of result) {
          if (i !== ',') temp.push(i);
        }
        const final = temp.slice(1, 11);
        tkb.push(final);
      }
      let subject = ``;
      for (let i of tkb) {
        if (i[2].toLowerCase() === this.getDay().toLowerCase()) {
          subject += `üìå ${i[0]} (${i[1]}):
          \r - Ph√≤ng ${i[4]}
          \r - Ti·∫øt ${i[5]} - Ti·∫øt ${parseInt(i[6]) + parseInt(i[5]) - 1}
          \r - ${this.getTime(i[5]).batDau} - ${
            this.getTime(parseInt(i[6]) + parseInt(i[5]) - 1).ketThuc
          }
          \r - Gi·∫£ng vi√™n l√† ${i[7]}
          \n\n`;
        }
      }

      switch (subject) {
        case '':
          await browser.close();
          return `H√° h√°... H√¥m nay kh√¥ng ph·∫£i h·ªçc g√¨ c·∫£ ${name} ∆°i. N√™n vui hay bu·ªìn ƒë√¢y üòÜ`;
        default:
          await browser.close();
          return subject;
      }
    } else {
      await browser.close();
      return `Tu·∫ßn n√†y ${name} ƒë∆∞·ª£c ngh·ªâ r·ªìi. S∆∞·ªõng v·∫≠y ta ü§©`;
    }
  }
}

module.exports = new Humg();
